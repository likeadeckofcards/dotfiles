art() {
  if [ -f bin/artisan ]; then
    php bin/artisan "$@"
  elif [ -f vendor/bin/testbench ]; then
	./vendor/bin/testbench "$@"
  else
    php artisan "$@"
  fi
}

alias tinker='artisan tinker'

# Misc PHP

test() {
  if [ -f artisan ]; then
    php artisan test --parallel "$@"
  elif [ -f vendor/bin/pest ]; then
    valet php vendor/bin/pest "$@"
  elif [ -f vendor/bin/phpunit ]; then
    valet php vendor/bin/phpunit "$@"
  fi
}

phpunit() {
  valet php vendor/bin/phpunit "$@"
}

ng() {
  if [ -f node_modules/@angular/cli/bin/ng ]; then
    node_modules/@angular/cli/bin/ng "$@"
  fi
}

alias nah='git reset --hard;git clean -df'
alias migrate="php artisan migrate"
alias mfs="php artisan migrate:fresh --seed"
alias rollback="php artisan migrate:rollback"
alias outdated="composer outdated --direct"
alias ds="php artisan dump-server"
alias routes="php artisan route:list --columns=Domain,Method,URI,Name,Action"
alias route-names="php artisan route:list --columns=URI,Name"
alias croutes="php artisan route:list --compact"
alias aliases="cat ~/.aliases"
alias flushdns="sudo killall -HUP mDNSResponder"
alias sail="bash vendor/bin/sail"

createdb() {
    mysql -h 127.0.0.1 -u root -proot ${@:2} -e "CREATE DATABASE $1;"
}

backupdb() {
    mysqldump -h 127.0.0.1 -u root -proot ${@:3} $1 | gzip > $2
}

restoredb() {
    mysql -h 127.0.0.1 -u root -proot $1 ${@:3} < $2
}

killport() {
    lsof -nt -i4TCP:$1 | tr -s ' ' | cut -d ' ' -f 2 | xargs -L1 kill -9
}

phpv() {
    valet stop
    brew unlink php@7.2 php@7.3 php@7.4 php
    brew link --force --overwrite $1
    brew services start $1
    composer global update
	rm -f ~/.config/valet/valet.sock
    valet install
}

#alias php72="phpv php@7.2"
#alias php73="phpv php@7.3"
#alias php74="phpv php@7.4"
#alias php80="phpv php"

alias clear-logs="cat /dev/null > storage/logs/laravel.log"

parallel(){
    trap "pkill -P $$; kill -INT $$" INT

    count=$1
    shift

    while read n
    do
        "$@" &
    done < <(seq $((count)))
    wait
}

to() {
   takeout "$@"
}

phpstan() {
   vendor/bin/phpstan analyze
}

isolate() {
	valet isolate $1

	PHP_VERSION=$(echo "$1" | sed -r "s/[@\.]//g")

	if [ ! -f "/usr/local/bin/$PHP_VERSION" ]; then
		ln -s $(brew --prefix $1)/bin/php /usr/local/bin/$PHP_VERSION
	fi

	touch ./php
	chmod u+x ./php
	echo "$PHP_VERSION \$@" > ./php

	touch ./composer
	chmod u+x ./composer
	echo "$PHP_VERSION \$(which composer) \$@" > ./composer
}

php() {
	if [ -f ./php ]; then
		./php $@
	else
		valet php $@
	fi
}

fixscreens() {
	displayplacer "id:FE41EDD3-3BE5-49CF-B706-26C1377D0666 res:2560x1440 hz:60 color_depth:7 scaling:off origin:(0,0) degree:0" "id:37D8832A-2D66-02CA-B9F7-8F30A301B230 res:1728x1117 hz:120 color_depth:8 scaling:on origin:(-5368,0) degree:0" "id:3C817153-D7A2-4551-8CEB-26527C671A60 res:1080x1920 hz:60 color_depth:8 scaling:off origin:(-3640,-326) degree:90" "id:CABFF43E-EBAD-4128-91FF-9CF4AC04F4FD res:2560x1440 hz:60 color_depth:7 scaling:off origin:(-2560,0) degree:0"
}
